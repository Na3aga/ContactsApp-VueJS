<template>
  <div id="app">
    <!-- <img alt="Vue logo" src="./assets/logo.png"> -->

    <div class="grid">

      <!-- <div class="mar-wrapper"> -->
      <aside class="sidebar-left">Left Sidebar</aside>

      <div id="content">
        <Contacts v-bind:contacts="contacts" v-on:del-contact="deleteContact" />
        <AddContact v-if="currentAction=='add-contact'" v-on:add-contact="addContact" />
      </div>

      <aside class="sidebar-right">Right Sidebar</aside>

      <footer>Footer</footer>
      <!-- </div> -->
    </div>
  </div>
</template>

<script>
import Contacts from "../components/Contacts.vue";
import AddContact from "../components/AddContact.vue";

export default {
  name: "Home",
  components: {
    Contacts,
    AddContact,
  },
  data() {
    return {
      contacts: [
        {
          id: 0,
          name: "Patrick Scott",
          brief: "Old friend",
          avatar: 1,
          isOnline: true,
          additional: {},
        },
        {
          id: 1,
          name: "Edisson Tesla",
          brief: "engineer or car",
          avatar: 2,
          isOnline: true,
          additional: {},
        },
        {
          id: 2,
          name: "Elon Musk",
          brief: "guy who sold me tesla",
          avatar: 3,
          isOnline: false,
          additional: {},
        },
      ],
      currentAction: 'add-contact'
      // currentAction: 'edit-contacts'

    };
  },
  methods: {
    deleteContact(id) {
      this.contacts = this.contacts.filter((con) => con.id !== id);
    },
    addContact(con) {
      console.log(con);
      this.contacts = [...this.contacts, con];
    },
  },
  created() {
    // const url = (name) => `https://avatars.abstractapi.com/v1/?api_key=eb302de9e78b40869bd42a05a43a647d&name=${name}`;

  },
};
</script>

<style>
#app {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin: 0 auto;
  width: 100%;
  height: 100vh;
  align-content: center;
}

.grid {
  display: grid;
  grid-template-columns: 150px auto 150px;
  grid-template-rows: auto 100px;
  grid-auto-rows: auto;
  grid-gap: 1em;
  width: 100%;
  height: 100vh;
}

/* .mar-wrapper{
  margin-top: max(min(10%,100px + 5vh), 100px );
  position: relative;
    width: 100%;
  height: 100vh;
} */

header,
footer {
  grid-column: 1 / -1;
}

@media all and (max-width: 700px) {
  aside,
  #content {
    grid-column: 1 / 4;
  }
}

/* Demo Specific Styles */
header,
#content,
article,
footer {
  background: #eaeaea;
  display: flex;
  align-items: center;
  justify-content: center;
  height: auto;
}

#content {
  display: flex;
}


header {
  height: min(10%, 200px);
}

#content {
  padding: min(40px, 10%);
}
footer {
  background-color: blue;
}

.displayed{
  display: none;
}
</style>
